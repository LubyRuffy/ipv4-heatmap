.\" 
.\"   IPv4 Heatmap
.\"   (C) 2007 The Measurement Factory, Inc
.\"   Licensed under the GPL, version 2
.\"   http://maps.measurement-factory.com/
.\"
.Dd 10 October, 2007
.Dt ipv4-heatmap 1
.Os
.Sh NAME
.Nm ipv4-heatmap
.Nd Create a map of IPv4 address data
.Sh SYNOPSIS
.Nm
.Op Fl dhpr
.Op Fl A Ar float
.Op Fl B Ar float
.Op Fl a Ar file
.Op Fl f Ar font
.Op Fl k Ar file
.Op Fl o Ar file
.Op Fl s Ar file
.Op Fl t Ar string
.Op Fl u Ar string
< iplist
.Sh DESCRIPTION
.Nm
is a program that generates a map of IPv4 address data using a
space-filling Hilbert Curve.  Inspiration for
.Nm
comes from the xkcd comic (http://www.xkcd.org/195/).
.Pp
The output of
.Nm
is a 4096x4096 PNG image.
Each pixel in the image represents a single /24 network and is assigned
one of 256 colors.  Typically, the pixel color
represents the number of hosts within the /24 belonging to a
dataset or having some property, such as being pingable or
being the source of some traffic.
.Pp
Pixel colors range from blue (1 host) to red (256 hosts),
while black represents no data (0 hosts).  Of course, the colors
and pixel values may also be used to represent other properties of
IPv4 addresses.
.Pp
The map may be annotated by placing transparent
text labels over specific regions of address space.
.Pp
.Nm
also supports shading of areas specified by CIDR netblocks.  This is
useful to show reserved and other special address space, for example.
.Pp
.Nm
can also add an optional legend to the map.
.Pp
.Nm
uses the GD library (libgd) to create the map image.
.Sh COMMAND LINE OPTIONS
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl A Ar logmin
Input data will be scaled logarithmically such that
input values less than or equal to
.Pa logmin
will be set to 1.
.It Fl A Ar logmax
Input data will be scaled logarithmically such that
input values greater than or equal to
.Pa logmax
will be set to 255.
.It Fl a Ar annotations
The
.Pa annotations
file contains a list of annotations for the map.  See ANNOTATIONS below
for the format of this file.
.It Fl c Ar color
The color of the annotations (those that appear inside the map).  Specified
as 0xRRGGBB.
.It Fl d
increase debugging levels.
.It Fl f Ar font
Specifies the font to use for the legend and annotations.  If
libgd was compiled with fontconfig support, then this can be a
fontconfig string such as "Times-12:bold".  Otherwise, you can
also specify the pathname to a True Type Font (.ttf) file.
.It Fl h
Attach a horizontal legend to the bottom of the map.  Note that
the legend is drawn only if the
.Fl t
option is given.
.It Fl k Ar keyfile
Use
.Pa keyfile
to create the legend scale, rather than the built-in blue-to-red scale.
.It Fl o Ar outfile
Output file name.  If none is given, the image is saved as map.png by
default.
.It Fl p
Include a section in the legend that shows the size of CIDR prefixes.
Boxes and labels will be drawn to show the size of /8, /12, /16, /20, and /24
prefixes.
.It Fl r
Reverse the background and foreground colors.
.It Fl s Ar shades
The
.Ar shades
file can be used to shade certain areas of the map with specific colors
and transparency levels.  See SHADING below for the format of this file.
.It Fl t Ar title
Instructs
.Nm
to draw a legend for the map and place the
.Ar title
string in the top (or right) section.
You may use "\\n" to create multi-line titles.  By default the legend
will be drawn vertically and attached to the right side of the map.
Use the
.Fl h
option to create a horizontal legend instead.
.It Fl u Ar string
Instructs
.Nm
to draw a scale in the legend showing the range of colors
and their values.
.Ar string
will be placed above the scale.  Currently,
.Nm
always assumes the data represents some kind of utilization 
and prints percentages from 0 to 100% next to the scale.
.It Fl y Ar cidr
Specifies the CIDR netblock that should be rendered.  The default
is to render the entire IPv4 space (0.0.0.0/0).  The "slash" value
must be even so that the output image is square.
The
.Fl y
and
.Fl z
options together determine the size of the output image.
.It Fl z Ar bits
Specifies the number of address space bits assigned to each pixel
in the output image.  By default each pixel represents a /24 network,
which corresponds to 8 host bits (i.e., 256 hosts).  Specify 0 here
for one pixel per host address.
.El
.Sh INPUT MODES
.Nm
accepts three input modes:
.Bl -enum
.It
Increment mode.
.Pp
In this mode, the input consists of IPv4 addresses only, one
address per line.  Each address in the list increments the pixel
value for the corresponding /24.
In this mode, repeated addresses may lead to false results because
.Nm
does not check for uniqueness of the input values.  It silently
limits pixels to the maximum value.  The user should run the data
through
.Xr sort 1
and
.Xr uniq 1
beforehand, if necessary.
.It
Exact mode.
.Pp
In this mode, the input consists of two whitespace-separated fields:
an IPv4 address and a color index.  The color index is an integer
in the range 0--255.  Be careful with this mode because later
addresses may overwrite earlier ones in the same /24.
.It
Logarithmic mode.
.Pp
Very similar to Exact mode, except that the second column is
logarithmically scaled to calculate the color index.  In order to
use this mode the input must have two fields, and the
.Fl A Ar logmin
and
.Fl B Ar logmax
command line options must be given.  Color index
.Vt k
is calculated from input value
.Vt i
according to this formula:
.Bd -literal -offset indent
            ln ( i / logmin)
k = 255 * -------------------- 
          ln (logmax / logmin)
.Ed
.El
.Sh ANNOTATIONS
The annotations file consists of two or three TAB-separated fields.  The first field
is a CIDR prefix, and the second is the annotation string.  The annotation string
is rendered within
the boundary of that prefix, centered both vertically and horizontally.  
The third field, if present, is also rendered just below the 
annotation text in a fixed-size 12-point font.  If the third field is
equal to the string "prefix" then the CIDR prefix (from field 1) is rendered instead.
.Pp
The annotations file might look like this, for example:
.Bd -literal -offset indent
15.0.0.0/8      HP
16.0.0.0/8      DEC
17.0.0.0/8      Apple
.Ed
.Pp
The
.Nm
source code distribution should include a file named iana-labels.txt,
which is based on the list of IPv4 assignments made by IANA.
.Pp
The font can be selected with the
.Fl f
command line option.
At this time, however, the text color and transparency are hard-coded in the
.Nm
program.
.Sh SHADING
Areas of the map can be "shaded" by using the
.Fl s Ar shades
option.  This was originally developed simply to highlight address space that
is designated reserved or unallocated, but is also a useful way to
render complex map data.  The
.Ar shades
file consists of three TAB-separated fields: prefix, color, and alpha value.
.Pp
The CIDR prefix specifies the area to be shaded.  The color should
be specified has a hexadecimal value beginning with "0x".  The alpha value
controls the transparency of the shaded area and is passed directly to
the GD library functions.  An alpha value of 0 means full transparency, while
a value of 127 means no transparency (full opacity).  Here is an example that
shows RFC 1918 address space in a light purple color:
.Bd -literal -offset indent
10.0.0.0/8      0x7F7FFF        64
172.16.0.0/12   0x7F7FFF        64
192.168.0.0/16  0x7F7FFF        64
.Ed
.Sh HILBERT CURVE
.Nm
uses a 12th-order Hilbert Curve to represnet the entire IPv4 address
space.  Locating a particular IP address along the curve can
be confusing at first.  
Here is what a 2nd-order Hilbert curve looks like:
.Bd -literal -offset indent
    0---1   14--15
        |   |
    3---2   13--12
    |            |
    4   7---8   11
    |   |   |    |
    5---6   9---10
.Ed
.Pp
The best way to understand how the Hilbert Curve works is to try
drawing your own!
.Sh COPYRIGHT
.Bd -literal -offset indent
IPv4 Heatmap
(C) 2007 The Measurement Factory, Inc
Licensed under the GPL, version 2
http://maps.measurement-factory.com/
.Ed
.Sh AUTHORS
.Nm
was written by Duane Wessels of The Measurement Factory, Inc.
.Sh BUGS
Can't draw IPv6 address maps.
.Pp
The legends don't look all that great.  You can use an image editing
program like The Gimp to rearrange the legend and add better-looking
text.
